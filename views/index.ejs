<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <style>
        html,
        body {
            height: 100%;
            width: 100%;
            margin: 0;
        }

        .no-legend .heatmap-legend-unit {
            display: none;
        }

        .no-legend .chart-legend .subdomain-name {
            display: none;
        }

        /* This is just so it doesn't look like shit*/
        #emails_on_that_day {
            font-family: 'Helvetica';
            padding: 20px;
            font-size: 14px;
        }
    </style>
    <title>Email Archive</title>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01"
            aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
            <a class="navbar-brand" href="#">Email Archive</a>
            <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                <li class="nav-item active">
                    <a class="nav-link" href="/">Dashboard <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/search">Search</a>
                </li>
            </ul>
            <form id="search-form" class="form-inline my-2 my-lg-0">
                <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-light my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
    </nav>
    <div class="container-fluid">
        <div class="row">
            <div id="chart_multi_inbox_incoming_amounts" class="col-12"></div>
        </div>
        <div class="row">
            <div id="chart_single_inbox_activity_heatmap_single" class="no-legend col-6"></div>
            <div id="table" class="col-6">
                <p style="font-size: 12px; color: #666666;">Most frequent senders</p>
                <table class="table table-borderless table-sm">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Name</th>
                            <th scope="col">Address</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
    <script src="https://unpkg.com/frappe-charts@1.1.0/dist/frappe-charts.min.iife.js"></script>
    <script>
        const collections = <%- JSON.stringify(collections) %>;

        class Chart {
            /**
             * Creates an instance of Chart
             * @params {Object} chart a frappe.Chart
             * @params {Function} preprocess (optional) a function which is called to preprocess data before adding it to the chart
             */
            constructor(chart, preprocess) {
                this.chart = chart;
                this.preprocess = preprocess || ((data, newData) => [...data, ...newData]); // If no preprocessing defined, just pass the data along
            }

            /**
             * Adds new data to the chart
             * @params {Object} newData the new data to be added
             */
            update(newData) {
                const data = this.preprocess(this.chart.data, newData);

                this.chart.update(data);
            }
        }

        const chart_multi_inbox_incoming_amounts = new Chart(new frappe.Chart("#chart_multi_inbox_incoming_amounts", {
            title: "Received E-Mails per Account",
            data: {
                labels: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                datasets: collections.map(c => {
                    return { name: c, type: "bar", values: new Array(7).fill(0) }
                })
            },
            type: 'axis-mixed',
            height: 350
        }), (data, newData) => {
            const inbox = newData[0];
            const id = newData[1]['_id'];
            const count = newData[1]['count'];
            const date = new Date(id.year, id.month - 1, id.day);
            const dayOfWeek = date.getDay() - 1; // -1 since the count starts at sunday, but we want to start at monday

            let dataset = data['datasets'].filter(d => d.name === inbox)[0];

            dataset.values[dayOfWeek] = count;

            return data;
        });

        const chart_s_i_activity_heatmap = new Chart(new frappe.Chart("#chart_single_inbox_activity_heatmap_single", {
            type: 'heatmap',
            title: "E-Mails this year",
            height: 150,
            data: {
                dataPoints: {
                },
                start: new Date(new Date().getFullYear(), 0, 1),
                end: new Date(new Date().getFullYear(), 11, 31)
            },
            countLabel: 'E-Mails',
            discreteDomains: 1,
            colors: ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e']
        }), (data, newData) => {
            const inbox = newData[0];
            const id = newData[1]['_id'];
            const count = newData[1]['count'];
            const date = new Date(id.year, id.month - 1, id.day);
            const start = new Date(id.year, 0, 1);
            const day = Math.floor((date - start) / 86400000);
            const ms = String(1546300800 + day * 86400);

            if (ms in data['dataPoints']) {
                data['dataPoints'][ms] += count;
            } else {
                data['dataPoints'][ms] = count;
            }

            return data;
        });

        /*
            <tr>
                <th scope="row">1</th>
                <td>Mark</td>
                <td>Otto</td>
            </tr>
        */
        const tr = data => {
            const count = data.count;
            const name = data['_id'][0].name || "";
            const address = data['_id'][0].address || "";

            const tr = document.createElement('tr');
            const td1 = document.createElement('th');
            const td2 = document.createElement('td');
            const td3 = document.createElement('td');

            td1.appendChild(document.createTextNode(count));
            td1.setAttribute("scope", "row");
            td2.appendChild(document.createTextNode(name));
            td3.appendChild(document.createTextNode(address));

            tr.appendChild(td1);
            tr.appendChild(td2);
            tr.appendChild(td3);

            return tr;
        }

        const table = new Chart({
            data: [],
            update: data => {
                const tbody = document.querySelector('table tbody');

                // Clear table
                while (tbody.firstChild) {
                    tbody.removeChild(tbody.firstChild);
                }

                data.forEach(d => tbody.appendChild(tr(d)));
            }
        },
            (data, newData) => {
                const inbox = newData[0];
                const value = newData[1];
                data.push(value);

                data = data.sort((a, b) => a.count < b.count ? -1 : 1).slice(0, 3);

                return data;
            });

    </script>
    <script>
        $(function () {
            const socket = io();

            // Returns [<inbox>, {count, _id: {day, month, year}}]
            socket.on('chart1', result => {
                chart_multi_inbox_incoming_amounts.update(result);
            });

            // Returns [<inbox>, {count, _id: {day, month, year}}]
            socket.on('chart2', result => {
                chart_s_i_activity_heatmap.update(result);
            });

            // Returns [<inbox>, {count, _id: [address, name]]
            socket.on('chart3', result => {
                table.update(result);
            });

            socket.emit('chart1');
            socket.emit('chart2', new Date().getUTCFullYear());
            socket.emit('chart3');

            $("#search-form").submit(e => {
                e.preventDefault();
                window.location.href = `/search?search=${$('#search-form > input').val()}`;
            });
        });

    </script>
</body>

</html>